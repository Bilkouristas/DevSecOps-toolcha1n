{
  "alerts": [
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Set-Cookie: PHPSESSID",
      "pluginId": "10010",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "13",
      "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
      "messageId": "3",
      "url": "http://192.168.1.4:8070/",
      "reference": "https://owasp.org/www-community/HttpOnly",
      "solution": "Ensure that the HttpOnly flag is set for all cookies.",
      "alert": "Cookie No HttpOnly Flag",
      "param": "PHPSESSID",
      "attack": "",
      "name": "Cookie No HttpOnly Flag",
      "risk": "Low",
      "id": "18"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Set-Cookie: security",
      "pluginId": "10010",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "13",
      "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
      "messageId": "3",
      "url": "http://192.168.1.4:8070/",
      "reference": "https://owasp.org/www-community/HttpOnly",
      "solution": "Ensure that the HttpOnly flag is set for all cookies.",
      "alert": "Cookie No HttpOnly Flag",
      "param": "security",
      "attack": "",
      "name": "Cookie No HttpOnly Flag",
      "risk": "Low",
      "id": "20"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Set-Cookie: PHPSESSID",
      "pluginId": "10054",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "13",
      "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
      "messageId": "3",
      "url": "http://192.168.1.4:8070/",
      "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
      "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
      "alert": "Cookie Without SameSite Attribute",
      "param": "PHPSESSID",
      "attack": "",
      "name": "Cookie Without SameSite Attribute",
      "risk": "Low",
      "id": "21"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Set-Cookie: security",
      "pluginId": "10054",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "13",
      "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
      "messageId": "3",
      "url": "http://192.168.1.4:8070/",
      "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
      "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
      "alert": "Cookie Without SameSite Attribute",
      "param": "security",
      "attack": "",
      "name": "Cookie Without SameSite Attribute",
      "risk": "Low",
      "id": "23"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"username\" \"password\" \"Login\" \"user_token\" ].",
      "method": "GET",
      "evidence": "<form action=\"login.php\" method=\"post\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "5",
      "url": "http://192.168.1.4:8070/login.php",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "24"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "5",
      "url": "http://192.168.1.4:8070/login.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "25"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "5",
      "url": "http://192.168.1.4:8070/login.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "26"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "6",
      "url": "http://192.168.1.4:8070/dvwa/css/login.css",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "27"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"create_db\" \"user_token\" ].",
      "method": "GET",
      "evidence": "<form action=\"#\" method=\"post\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "23",
      "url": "http://192.168.1.4:8070/setup.php",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "34"
    },
    {
      "sourceid": "3",
      "other": "The following comment/snippet was identified via the pattern: \\bDB\\b\n<!-- Create db button -->\n",
      "method": "GET",
      "evidence": "",
      "pluginId": "10027",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.",
      "messageId": "23",
      "url": "http://192.168.1.4:8070/setup.php",
      "reference": "",
      "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
      "alert": "Information Disclosure - Suspicious Comments",
      "param": "",
      "attack": "",
      "name": "Information Disclosure - Suspicious Comments",
      "risk": "Informational",
      "id": "35"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "23",
      "url": "http://192.168.1.4:8070/setup.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "36"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "23",
      "url": "http://192.168.1.4:8070/setup.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "37"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "24",
      "url": "http://192.168.1.4:8070/dvwa/css/main.css",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "38"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "25",
      "url": "http://192.168.1.4:8070/dvwa/js/add_event_listeners.js",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "39"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "26",
      "url": "http://192.168.1.4:8070/dvwa/js/dvwaPage.js",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "40"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "44",
      "url": "http://192.168.1.4:8070/index.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "58"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "44",
      "url": "http://192.168.1.4:8070/index.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "59"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "54",
      "url": "http://192.168.1.4:8070/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "66"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "54",
      "url": "http://192.168.1.4:8070/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "67"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "55",
      "url": "http://192.168.1.4:8070/robots.txt",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "68"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "PHP warning",
      "pluginId": "10023",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.",
      "messageId": "106",
      "url": "http://192.168.1.4:8070/instructions.php",
      "reference": "",
      "solution": "Disable debugging messages before pushing to production.",
      "alert": "Information Disclosure - Debug Error Messages",
      "param": "",
      "attack": "",
      "name": "Information Disclosure - Debug Error Messages",
      "risk": "Low",
      "id": "82"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "106",
      "url": "http://192.168.1.4:8070/instructions.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "83"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "106",
      "url": "http://192.168.1.4:8070/instructions.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "84"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"username\" \"password\" \"Login\" ].",
      "method": "GET",
      "evidence": "<form action=\"#\" method=\"GET\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "108",
      "url": "http://192.168.1.4:8070/vulnerabilities/brute/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "85"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "108",
      "url": "http://192.168.1.4:8070/vulnerabilities/brute/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "86"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "108",
      "url": "http://192.168.1.4:8070/vulnerabilities/brute/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "87"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"ip\" \"Submit\" ].",
      "method": "GET",
      "evidence": "<form name=\"ping\" action=\"#\" method=\"post\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "114",
      "url": "http://192.168.1.4:8070/vulnerabilities/exec/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "88"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "114",
      "url": "http://192.168.1.4:8070/vulnerabilities/exec/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "89"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "114",
      "url": "http://192.168.1.4:8070/vulnerabilities/exec/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "90"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"password_new\" \"password_conf\" \"Change\" ].",
      "method": "GET",
      "evidence": "<form action=\"#\" method=\"GET\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "117",
      "url": "http://192.168.1.4:8070/vulnerabilities/csrf/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "91"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "117",
      "url": "http://192.168.1.4:8070/vulnerabilities/csrf/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "92"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "117",
      "url": "http://192.168.1.4:8070/vulnerabilities/csrf/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "93"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "119",
      "url": "http://192.168.1.4:8070/vulnerabilities/fi/?page=include.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "94"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "119",
      "url": "http://192.168.1.4:8070/vulnerabilities/fi/?page=include.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "95"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"MAX_FILE_SIZE\" \"uploaded\" \"Upload\" ].",
      "method": "GET",
      "evidence": "<form enctype=\"multipart/form-data\" action=\"#\" method=\"POST\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "123",
      "url": "http://192.168.1.4:8070/vulnerabilities/upload/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "96"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "123",
      "url": "http://192.168.1.4:8070/vulnerabilities/upload/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "97"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "123",
      "url": "http://192.168.1.4:8070/vulnerabilities/upload/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "98"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "<script src='https://www.google.com/recaptcha/api.js'></script>",
      "pluginId": "10017",
      "cweid": "829",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The page includes one or more script files from a third-party domain.",
      "messageId": "124",
      "url": "http://192.168.1.4:8070/vulnerabilities/captcha/",
      "reference": "",
      "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
      "alert": "Cross-Domain JavaScript Source File Inclusion",
      "param": "https://www.google.com/recaptcha/api.js",
      "attack": "",
      "name": "Cross-Domain JavaScript Source File Inclusion",
      "risk": "Low",
      "id": "99"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"step\" \"password_new\" \"password_conf\" \"Change\" ].",
      "method": "GET",
      "evidence": "<form action=\"#\" method=\"POST\" style=\"display:none;\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "124",
      "url": "http://192.168.1.4:8070/vulnerabilities/captcha/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "100"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "124",
      "url": "http://192.168.1.4:8070/vulnerabilities/captcha/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "101"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "124",
      "url": "http://192.168.1.4:8070/vulnerabilities/captcha/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "102"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"id\" \"Submit\" ].",
      "method": "GET",
      "evidence": "<form action=\"#\" method=\"GET\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "127",
      "url": "http://192.168.1.4:8070/vulnerabilities/sqli/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "103"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "127",
      "url": "http://192.168.1.4:8070/vulnerabilities/sqli/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "104"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "127",
      "url": "http://192.168.1.4:8070/vulnerabilities/sqli/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "105"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"id\" \"Submit\" ].",
      "method": "GET",
      "evidence": "<form action=\"#\" method=\"GET\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "128",
      "url": "http://192.168.1.4:8070/vulnerabilities/sqli_blind/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "106"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "128",
      "url": "http://192.168.1.4:8070/vulnerabilities/sqli_blind/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "107"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "128",
      "url": "http://192.168.1.4:8070/vulnerabilities/sqli_blind/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "108"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: ].",
      "method": "GET",
      "evidence": "<form method=\"post\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "130",
      "url": "http://192.168.1.4:8070/vulnerabilities/weak_id/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "109"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "130",
      "url": "http://192.168.1.4:8070/vulnerabilities/weak_id/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "110"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "130",
      "url": "http://192.168.1.4:8070/vulnerabilities/weak_id/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "111"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "133",
      "url": "http://192.168.1.4:8070/dvwa/",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "112"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "133",
      "url": "http://192.168.1.4:8070/dvwa/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "113"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "133",
      "url": "http://192.168.1.4:8070/dvwa/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "114"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: ].",
      "method": "GET",
      "evidence": "<form name=\"XSS\" method=\"GET\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "138",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_d/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "115"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "138",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_d/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "116"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "138",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_d/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "117"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"name\" ].",
      "method": "GET",
      "evidence": "<form name=\"XSS\" action=\"#\" method=\"GET\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "144",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_r/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "118"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "144",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_r/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "119"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "144",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_r/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "120"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"txtName\" \"btnSign\" \"btnClear\" ].",
      "method": "GET",
      "evidence": "<form method=\"post\" name=\"guestform\" \">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "145",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_s/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "121"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "145",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_s/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "122"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "145",
      "url": "http://192.168.1.4:8070/vulnerabilities/xss_s/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "123"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"token\" \"phrase\" \"send\" ].",
      "method": "GET",
      "evidence": "<form name=\"low_js\" method=\"post\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "124"
    },
    {
      "sourceid": "3",
      "other": "The following comment/snippet was identified via the pattern: \\bFROM\\b\n<script>\n\n/*\nMD5 code from here\nhttps://github.com/blueimp/JavaScript-MD5\n*/\n\n!function(n){\"use strict\";function t(n,t){var r=(65535&n)+(65535&t);return(n>>16)+(t>>16)+(r>>16)<<16|65535&r}function r(n,t){return n<<t|n>>>32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&r|~t&o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&o|r&~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r>>5]|=128<<r%32,n[14+(r+64>>>9<<4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e<n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=\"\",e=32*n.length;for(t=0;t<e;t+=8)r+=String.fromCharCode(n[t>>5]>>>t%32&255);return r}function d(n){var t,r=[];for(r[(n.length>>2)-1]=void 0,t=0;t<r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t<e;t+=8)r[t>>5]|=(255&n.charCodeAt(t/8))<<t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length>16&&(o=i(o,8*n.length)),r=0;r<16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=\"\";for(r=0;r<n.length;r+=1)t=n.charCodeAt(r),e+=\"0123456789abcdef\".charAt(t>>>4&15)+\"0123456789abcdef\".charAt(15&t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}\"function\"==typeof define&&define.amd?define(function(){return A}):\"object\"==typeof module&&module.exports?module.exports=A:n.md5=A}(this);\n\n\tfunction rot13(inp) {\n\t\treturn inp.replace(/[a-zA-Z]/g,function(c){return String.fromCharCode((c<=\"Z\"?90:122)>=(c=c.charCodeAt(0)+13)?c:c-26);});\n\t}\n\n\tfunction generate_token() {\n\t\tvar phrase = document.getElementById(\"phrase\").value;\n\t\tdocument.getElementById(\"token\").value = md5(rot13(phrase));\n\t}\n\n\tgenerate_token();\n</script>\n",
      "method": "GET",
      "evidence": "",
      "pluginId": "10027",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "",
      "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
      "alert": "Information Disclosure - Suspicious Comments",
      "param": "",
      "attack": "",
      "name": "Information Disclosure - Suspicious Comments",
      "risk": "Informational",
      "id": "125"
    },
    {
      "sourceid": "3",
      "other": "1732584193, which evaluates to: 2024-11-25 20:23:13",
      "method": "GET",
      "evidence": "1732584193",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "126"
    },
    {
      "sourceid": "3",
      "other": "271733879, which evaluates to: 1978-08-11 21:37:59",
      "method": "GET",
      "evidence": "271733879",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "127"
    },
    {
      "sourceid": "3",
      "other": "1732584194, which evaluates to: 2024-11-25 20:23:14",
      "method": "GET",
      "evidence": "1732584194",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "128"
    },
    {
      "sourceid": "3",
      "other": "271733878, which evaluates to: 1978-08-11 21:37:58",
      "method": "GET",
      "evidence": "271733878",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "129"
    },
    {
      "sourceid": "3",
      "other": "680876936, which evaluates to: 1991-07-30 08:28:56",
      "method": "GET",
      "evidence": "680876936",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "130"
    },
    {
      "sourceid": "3",
      "other": "389564586, which evaluates to: 1982-05-06 16:23:06",
      "method": "GET",
      "evidence": "389564586",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "131"
    },
    {
      "sourceid": "3",
      "other": "606105819, which evaluates to: 1989-03-16 21:43:39",
      "method": "GET",
      "evidence": "606105819",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "132"
    },
    {
      "sourceid": "3",
      "other": "1044525330, which evaluates to: 2003-02-06 04:55:30",
      "method": "GET",
      "evidence": "1044525330",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "133"
    },
    {
      "sourceid": "3",
      "other": "176418897, which evaluates to: 1975-08-04 17:14:57",
      "method": "GET",
      "evidence": "176418897",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "134"
    },
    {
      "sourceid": "3",
      "other": "1200080426, which evaluates to: 2008-01-11 14:40:26",
      "method": "GET",
      "evidence": "1200080426",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "135"
    },
    {
      "sourceid": "3",
      "other": "1473231341, which evaluates to: 2016-09-07 02:55:41",
      "method": "GET",
      "evidence": "1473231341",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "136"
    },
    {
      "sourceid": "3",
      "other": "45705983, which evaluates to: 1971-06-13 20:06:23",
      "method": "GET",
      "evidence": "45705983",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "137"
    },
    {
      "sourceid": "3",
      "other": "1770035416, which evaluates to: 2026-02-02 07:30:16",
      "method": "GET",
      "evidence": "1770035416",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "138"
    },
    {
      "sourceid": "3",
      "other": "1958414417, which evaluates to: 2032-01-22 15:00:17",
      "method": "GET",
      "evidence": "1958414417",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "139"
    },
    {
      "sourceid": "3",
      "other": "1990404162, which evaluates to: 2033-01-26 21:02:42",
      "method": "GET",
      "evidence": "1990404162",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "140"
    },
    {
      "sourceid": "3",
      "other": "1804603682, which evaluates to: 2027-03-09 09:48:02",
      "method": "GET",
      "evidence": "1804603682",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "141"
    },
    {
      "sourceid": "3",
      "other": "40341101, which evaluates to: 1971-04-12 16:51:41",
      "method": "GET",
      "evidence": "40341101",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "142"
    },
    {
      "sourceid": "3",
      "other": "1502002290, which evaluates to: 2017-08-06 02:51:30",
      "method": "GET",
      "evidence": "1502002290",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "143"
    },
    {
      "sourceid": "3",
      "other": "1236535329, which evaluates to: 2009-03-08 14:02:09",
      "method": "GET",
      "evidence": "1236535329",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "144"
    },
    {
      "sourceid": "3",
      "other": "165796510, which evaluates to: 1975-04-03 18:35:10",
      "method": "GET",
      "evidence": "165796510",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "145"
    },
    {
      "sourceid": "3",
      "other": "1069501632, which evaluates to: 2003-11-22 06:47:12",
      "method": "GET",
      "evidence": "1069501632",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "146"
    },
    {
      "sourceid": "3",
      "other": "643717713, which evaluates to: 1990-05-26 06:28:33",
      "method": "GET",
      "evidence": "643717713",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "147"
    },
    {
      "sourceid": "3",
      "other": "373897302, which evaluates to: 1981-11-06 07:21:42",
      "method": "GET",
      "evidence": "373897302",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "148"
    },
    {
      "sourceid": "3",
      "other": "701558691, which evaluates to: 1992-03-25 16:24:51",
      "method": "GET",
      "evidence": "701558691",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "149"
    },
    {
      "sourceid": "3",
      "other": "38016083, which evaluates to: 1971-03-16 19:01:23",
      "method": "GET",
      "evidence": "38016083",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "150"
    },
    {
      "sourceid": "3",
      "other": "660478335, which evaluates to: 1990-12-06 05:12:15",
      "method": "GET",
      "evidence": "660478335",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "151"
    },
    {
      "sourceid": "3",
      "other": "405537848, which evaluates to: 1982-11-07 12:24:08",
      "method": "GET",
      "evidence": "405537848",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "152"
    },
    {
      "sourceid": "3",
      "other": "568446438, which evaluates to: 1988-01-06 00:47:18",
      "method": "GET",
      "evidence": "568446438",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "153"
    },
    {
      "sourceid": "3",
      "other": "1019803690, which evaluates to: 2002-04-26 02:48:10",
      "method": "GET",
      "evidence": "1019803690",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "154"
    },
    {
      "sourceid": "3",
      "other": "187363961, which evaluates to: 1975-12-09 08:32:41",
      "method": "GET",
      "evidence": "187363961",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "155"
    },
    {
      "sourceid": "3",
      "other": "1163531501, which evaluates to: 2006-11-14 14:11:41",
      "method": "GET",
      "evidence": "1163531501",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "156"
    },
    {
      "sourceid": "3",
      "other": "1444681467, which evaluates to: 2015-10-12 16:24:27",
      "method": "GET",
      "evidence": "1444681467",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "157"
    },
    {
      "sourceid": "3",
      "other": "51403784, which evaluates to: 1971-08-18 18:49:44",
      "method": "GET",
      "evidence": "51403784",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "158"
    },
    {
      "sourceid": "3",
      "other": "1735328473, which evaluates to: 2024-12-27 14:41:13",
      "method": "GET",
      "evidence": "1735328473",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "159"
    },
    {
      "sourceid": "3",
      "other": "1926607734, which evaluates to: 2031-01-19 11:48:54",
      "method": "GET",
      "evidence": "1926607734",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "160"
    },
    {
      "sourceid": "3",
      "other": "2022574463, which evaluates to: 2034-02-03 05:14:23",
      "method": "GET",
      "evidence": "2022574463",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "161"
    },
    {
      "sourceid": "3",
      "other": "1839030562, which evaluates to: 2028-04-10 21:49:22",
      "method": "GET",
      "evidence": "1839030562",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "162"
    },
    {
      "sourceid": "3",
      "other": "35309556, which evaluates to: 1971-02-13 11:12:36",
      "method": "GET",
      "evidence": "35309556",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "163"
    },
    {
      "sourceid": "3",
      "other": "1530992060, which evaluates to: 2018-07-07 15:34:20",
      "method": "GET",
      "evidence": "1530992060",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "164"
    },
    {
      "sourceid": "3",
      "other": "1272893353, which evaluates to: 2010-05-03 09:29:13",
      "method": "GET",
      "evidence": "1272893353",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "165"
    },
    {
      "sourceid": "3",
      "other": "155497632, which evaluates to: 1974-12-05 12:47:12",
      "method": "GET",
      "evidence": "155497632",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "166"
    },
    {
      "sourceid": "3",
      "other": "1094730640, which evaluates to: 2004-09-09 07:50:40",
      "method": "GET",
      "evidence": "1094730640",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "167"
    },
    {
      "sourceid": "3",
      "other": "681279174, which evaluates to: 1991-08-04 00:12:54",
      "method": "GET",
      "evidence": "681279174",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "168"
    },
    {
      "sourceid": "3",
      "other": "358537222, which evaluates to: 1981-05-12 13:40:22",
      "method": "GET",
      "evidence": "358537222",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "169"
    },
    {
      "sourceid": "3",
      "other": "722521979, which evaluates to: 1992-11-23 07:32:59",
      "method": "GET",
      "evidence": "722521979",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "170"
    },
    {
      "sourceid": "3",
      "other": "76029189, which evaluates to: 1972-05-29 19:13:09",
      "method": "GET",
      "evidence": "76029189",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "171"
    },
    {
      "sourceid": "3",
      "other": "640364487, which evaluates to: 1990-04-17 11:01:27",
      "method": "GET",
      "evidence": "640364487",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "172"
    },
    {
      "sourceid": "3",
      "other": "421815835, which evaluates to: 1983-05-14 23:03:55",
      "method": "GET",
      "evidence": "421815835",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "173"
    },
    {
      "sourceid": "3",
      "other": "530742520, which evaluates to: 1986-10-26 15:28:40",
      "method": "GET",
      "evidence": "530742520",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "174"
    },
    {
      "sourceid": "3",
      "other": "995338651, which evaluates to: 2001-07-16 22:57:31",
      "method": "GET",
      "evidence": "995338651",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "175"
    },
    {
      "sourceid": "3",
      "other": "198630844, which evaluates to: 1976-04-17 18:14:04",
      "method": "GET",
      "evidence": "198630844",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "176"
    },
    {
      "sourceid": "3",
      "other": "1126891415, which evaluates to: 2005-09-16 13:23:35",
      "method": "GET",
      "evidence": "1126891415",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "177"
    },
    {
      "sourceid": "3",
      "other": "1416354905, which evaluates to: 2014-11-18 18:55:05",
      "method": "GET",
      "evidence": "1416354905",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "178"
    },
    {
      "sourceid": "3",
      "other": "57434055, which evaluates to: 1971-10-27 13:54:15",
      "method": "GET",
      "evidence": "57434055",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "179"
    },
    {
      "sourceid": "3",
      "other": "1700485571, which evaluates to: 2023-11-20 08:06:11",
      "method": "GET",
      "evidence": "1700485571",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "180"
    },
    {
      "sourceid": "3",
      "other": "1894986606, which evaluates to: 2030-01-18 12:10:06",
      "method": "GET",
      "evidence": "1894986606",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "181"
    },
    {
      "sourceid": "3",
      "other": "2054922799, which evaluates to: 2035-02-12 14:53:19",
      "method": "GET",
      "evidence": "2054922799",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "182"
    },
    {
      "sourceid": "3",
      "other": "1873313359, which evaluates to: 2029-05-12 16:49:19",
      "method": "GET",
      "evidence": "1873313359",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "183"
    },
    {
      "sourceid": "3",
      "other": "30611744, which evaluates to: 1970-12-21 02:15:44",
      "method": "GET",
      "evidence": "30611744",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "184"
    },
    {
      "sourceid": "3",
      "other": "1560198380, which evaluates to: 2019-06-10 16:26:20",
      "method": "GET",
      "evidence": "1560198380",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "185"
    },
    {
      "sourceid": "3",
      "other": "1309151649, which evaluates to: 2011-06-27 01:14:09",
      "method": "GET",
      "evidence": "1309151649",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "186"
    },
    {
      "sourceid": "3",
      "other": "145523070, which evaluates to: 1974-08-12 03:04:30",
      "method": "GET",
      "evidence": "145523070",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "187"
    },
    {
      "sourceid": "3",
      "other": "1120210379, which evaluates to: 2005-07-01 05:32:59",
      "method": "GET",
      "evidence": "1120210379",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "188"
    },
    {
      "sourceid": "3",
      "other": "718787259, which evaluates to: 1992-10-11 03:07:39",
      "method": "GET",
      "evidence": "718787259",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "189"
    },
    {
      "sourceid": "3",
      "other": "343485551, which evaluates to: 1980-11-19 07:39:11",
      "method": "GET",
      "evidence": "343485551",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "190"
    },
    {
      "sourceid": "3",
      "other": "909522486, which evaluates to: 1998-10-27 16:08:06",
      "method": "GET",
      "evidence": "909522486",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "191"
    },
    {
      "sourceid": "3",
      "other": "1549556828, which evaluates to: 2019-02-07 11:27:08",
      "method": "GET",
      "evidence": "1549556828",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "192"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "193"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "149",
      "url": "http://192.168.1.4:8070/vulnerabilities/javascript/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "194"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "script-src 'self' https://pastebin.com  example.com code.jquery.com https://ssl.google-analytics.com ;",
      "pluginId": "10055",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nstyle-src, style-src-elem, style-src-attr, img-src, connect-src, frame-src, frame-ancestors, font-src, media-src, object-src, manifest-src, prefetch-src, form-action\n\nThe directive(s): frame-ancestors, form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.",
      "messageId": "150",
      "url": "http://192.168.1.4:8070/vulnerabilities/csp/",
      "reference": "http://www.w3.org/TR/CSP2/\nhttp://www.w3.org/TR/CSP/\nhttp://caniuse.com/#search=content+security+policy\nhttp://content-security-policy.com/\nhttps://github.com/shapesecurity/salvation\nhttps://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources",
      "solution": "Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.",
      "alert": "CSP: Wildcard Directive",
      "param": "Content-Security-Policy",
      "attack": "",
      "name": "CSP: Wildcard Directive",
      "risk": "Medium",
      "id": "195"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"include\" ].",
      "method": "GET",
      "evidence": "<form name=\"csp\" method=\"POST\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "150",
      "url": "http://192.168.1.4:8070/vulnerabilities/csp/",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "196"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "150",
      "url": "http://192.168.1.4:8070/vulnerabilities/csp/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "197"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "150",
      "url": "http://192.168.1.4:8070/vulnerabilities/csp/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "198"
    },
    {
      "sourceid": "3",
      "other": "No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, etag] was found in the following HTML form: [Form 1: \"seclev_submit\" \"user_token\" ].",
      "method": "GET",
      "evidence": "<form action=\"#\" method=\"POST\">",
      "pluginId": "10202",
      "cweid": "352",
      "confidence": "Medium",
      "wascid": "9",
      "description": "No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.",
      "messageId": "152",
      "url": "http://192.168.1.4:8070/security.php",
      "reference": "http://projects.webappsec.org/Cross-Site-Request-Forgery\nhttp://cwe.mitre.org/data/definitions/352.html",
      "solution": "Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",
      "alert": "Absence of Anti-CSRF Tokens",
      "param": "",
      "attack": "",
      "name": "Absence of Anti-CSRF Tokens",
      "risk": "Low",
      "id": "199"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "152",
      "url": "http://192.168.1.4:8070/security.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "200"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "152",
      "url": "http://192.168.1.4:8070/security.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "201"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "159",
      "url": "http://192.168.1.4:8070/about.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "202"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "159",
      "url": "http://192.168.1.4:8070/about.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "203"
    },
    {
      "sourceid": "3",
      "other": "172.17.0.2:80\n172.17.0.2\n172.17.0.1\n172.17.0.2\n172.17.0.1\n",
      "method": "GET",
      "evidence": "172.17.0.2:80",
      "pluginId": "2",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "https://tools.ietf.org/html/rfc1918",
      "solution": "Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.",
      "alert": "Private IP Disclosure",
      "param": "",
      "attack": "",
      "name": "Private IP Disclosure",
      "risk": "Low",
      "id": "204"
    },
    {
      "sourceid": "3",
      "other": "20151012, which evaluates to: 1970-08-22 01:30:12",
      "method": "GET",
      "evidence": "20151012",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "205"
    },
    {
      "sourceid": "3",
      "other": "320151012, which evaluates to: 1980-02-23 05:50:12",
      "method": "GET",
      "evidence": "320151012",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "207"
    },
    {
      "sourceid": "3",
      "other": "20120211, which evaluates to: 1970-08-21 16:56:51",
      "method": "GET",
      "evidence": "20120211",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "208"
    },
    {
      "sourceid": "3",
      "other": "20100101, which evaluates to: 1970-08-21 11:21:41",
      "method": "GET",
      "evidence": "20100101",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "209"
    },
    {
      "sourceid": "3",
      "other": "20031129, which evaluates to: 1970-08-20 16:12:09",
      "method": "GET",
      "evidence": "20031129",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "213"
    },
    {
      "sourceid": "3",
      "other": "20150407, which evaluates to: 1970-08-22 01:20:07",
      "method": "GET",
      "evidence": "20150407",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "214"
    },
    {
      "sourceid": "3",
      "other": "31536000, which evaluates to: 1970-12-31 19:00:00",
      "method": "GET",
      "evidence": "31536000",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "216"
    },
    {
      "sourceid": "3",
      "other": "20170516, which evaluates to: 1970-08-22 06:55:16",
      "method": "GET",
      "evidence": "20170516",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "218"
    },
    {
      "sourceid": "3",
      "other": "57738392, which evaluates to: 1971-10-31 01:26:32",
      "method": "GET",
      "evidence": "57738392",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "219"
    },
    {
      "sourceid": "3",
      "other": "1608025568, which evaluates to: 2020-12-15 04:46:08",
      "method": "GET",
      "evidence": "1608025568",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "221"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "223"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "160",
      "url": "http://192.168.1.4:8070/phpinfo.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "224"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "162",
      "url": "http://192.168.1.4:8070/dvwa/css/",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "225"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "162",
      "url": "http://192.168.1.4:8070/dvwa/css/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "226"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "162",
      "url": "http://192.168.1.4:8070/dvwa/css/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "227"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "170",
      "url": "http://192.168.1.4:8070/favicon.ico",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "228"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "172",
      "url": "http://192.168.1.4:8070/dvwa/images/logo.png",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "229"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "173",
      "url": "http://192.168.1.4:8070/dvwa/images/",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "230"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "173",
      "url": "http://192.168.1.4:8070/dvwa/images/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "231"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "173",
      "url": "http://192.168.1.4:8070/dvwa/images/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "232"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "181",
      "url": "http://192.168.1.4:8070/dvwa/js/",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "233"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "181",
      "url": "http://192.168.1.4:8070/dvwa/js/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "234"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "181",
      "url": "http://192.168.1.4:8070/dvwa/js/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "235"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "185",
      "url": "http://192.168.1.4:8070/dvwa/images/login_logo.png",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "236"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "188",
      "url": "http://192.168.1.4:8070/dvwa/images/RandomStorm.png",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "237"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "189",
      "url": "http://192.168.1.4:8070/dvwa/images/spanner.png",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "238"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "PHP warning",
      "pluginId": "10023",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.",
      "messageId": "191",
      "url": "http://192.168.1.4:8070/instructions.php?doc=readme",
      "reference": "",
      "solution": "Disable debugging messages before pushing to production.",
      "alert": "Information Disclosure - Debug Error Messages",
      "param": "",
      "attack": "",
      "name": "Information Disclosure - Debug Error Messages",
      "risk": "Low",
      "id": "239"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "191",
      "url": "http://192.168.1.4:8070/instructions.php?doc=readme",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "240"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "191",
      "url": "http://192.168.1.4:8070/instructions.php?doc=readme",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "241"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "193",
      "url": "http://192.168.1.4:8070/instructions.php?doc=PDF",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "242"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "193",
      "url": "http://192.168.1.4:8070/instructions.php?doc=PDF",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "243"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "194",
      "url": "http://192.168.1.4:8070/instructions.php?doc=changelog",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "244"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "194",
      "url": "http://192.168.1.4:8070/instructions.php?doc=changelog",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "245"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "195",
      "url": "http://192.168.1.4:8070/instructions.php?doc=copying",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "246"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "195",
      "url": "http://192.168.1.4:8070/instructions.php?doc=copying",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "247"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "196",
      "url": "http://192.168.1.4:8070/instructions.php?doc=PHPIDS-license",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "248"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "196",
      "url": "http://192.168.1.4:8070/instructions.php?doc=PHPIDS-license",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "249"
    },
    {
      "sourceid": "3",
      "other": "The URL contains potentially sensitive information. The following string was found via the pattern: pass\npassword",
      "method": "GET",
      "evidence": "password",
      "pluginId": "10024",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.",
      "messageId": "197",
      "url": "http://192.168.1.4:8070/vulnerabilities/brute/?Login=Login&password=ZAP&username=ZAP",
      "reference": "",
      "solution": "Do not pass sensitive information in URIs.",
      "alert": "Information Disclosure - Sensitive Information in URL",
      "param": "password",
      "attack": "",
      "name": "Information Disclosure - Sensitive Information in URL",
      "risk": "Informational",
      "id": "250"
    },
    {
      "sourceid": "3",
      "other": "The URL contains potentially sensitive information. The following string was found via the pattern: user\nusername",
      "method": "GET",
      "evidence": "username",
      "pluginId": "10024",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.",
      "messageId": "197",
      "url": "http://192.168.1.4:8070/vulnerabilities/brute/?Login=Login&password=ZAP&username=ZAP",
      "reference": "",
      "solution": "Do not pass sensitive information in URIs.",
      "alert": "Information Disclosure - Sensitive Information in URL",
      "param": "username",
      "attack": "",
      "name": "Information Disclosure - Sensitive Information in URL",
      "risk": "Informational",
      "id": "251"
    },
    {
      "sourceid": "3",
      "other": "The URL contains potentially sensitive information. The following string was found via the pattern: pass\npassword_conf",
      "method": "GET",
      "evidence": "password_conf",
      "pluginId": "10024",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.",
      "messageId": "199",
      "url": "http://192.168.1.4:8070/vulnerabilities/csrf/?Change=Change&password_conf=ZAP&password_new=ZAP",
      "reference": "",
      "solution": "Do not pass sensitive information in URIs.",
      "alert": "Information Disclosure - Sensitive Information in URL",
      "param": "password_conf",
      "attack": "",
      "name": "Information Disclosure - Sensitive Information in URL",
      "risk": "Informational",
      "id": "252"
    },
    {
      "sourceid": "3",
      "other": "The URL contains potentially sensitive information. The following string was found via the pattern: pass\npassword_new",
      "method": "GET",
      "evidence": "password_new",
      "pluginId": "10024",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.",
      "messageId": "199",
      "url": "http://192.168.1.4:8070/vulnerabilities/csrf/?Change=Change&password_conf=ZAP&password_new=ZAP",
      "reference": "",
      "solution": "Do not pass sensitive information in URIs.",
      "alert": "Information Disclosure - Sensitive Information in URL",
      "param": "password_new",
      "attack": "",
      "name": "Information Disclosure - Sensitive Information in URL",
      "risk": "Informational",
      "id": "253"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "207",
      "url": "http://192.168.1.4:8070/dvwa/?C=N;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "254"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "207",
      "url": "http://192.168.1.4:8070/dvwa/?C=N;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "255"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "207",
      "url": "http://192.168.1.4:8070/dvwa/?C=N;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "256"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "210",
      "url": "http://192.168.1.4:8070/dvwa/?C=M;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "257"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "210",
      "url": "http://192.168.1.4:8070/dvwa/?C=M;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "258"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "210",
      "url": "http://192.168.1.4:8070/dvwa/?C=M;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "259"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "212",
      "url": "http://192.168.1.4:8070/dvwa/?C=S;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "260"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "212",
      "url": "http://192.168.1.4:8070/dvwa/?C=S;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "261"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "212",
      "url": "http://192.168.1.4:8070/dvwa/?C=S;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "262"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "214",
      "url": "http://192.168.1.4:8070/dvwa/?C=D;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "263"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "214",
      "url": "http://192.168.1.4:8070/dvwa/?C=D;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "264"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "214",
      "url": "http://192.168.1.4:8070/dvwa/?C=D;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "265"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "216",
      "url": "http://192.168.1.4:8070/dvwa/includes/",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "266"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "216",
      "url": "http://192.168.1.4:8070/dvwa/includes/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "267"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "216",
      "url": "http://192.168.1.4:8070/dvwa/includes/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "268"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "219",
      "url": "http://192.168.1.4:8070/icons/blank.gif",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "269"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "225",
      "url": "http://192.168.1.4:8070/icons/back.gif",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "270"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "227",
      "url": "http://192.168.1.4:8070/icons/folder.gif",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "271"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "237",
      "url": "http://192.168.1.4:8070/dvwa/images/lock.png",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "272"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "239",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=N;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "273"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "239",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=N;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "274"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "239",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=N;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "275"
    },
    {
      "sourceid": "3",
      "other": "0000000000, which evaluates to: 1969-12-31 19:00:00",
      "method": "GET",
      "evidence": "0000000000",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "276"
    },
    {
      "sourceid": "3",
      "other": "0000416222, which evaluates to: 1970-01-05 14:37:02",
      "method": "GET",
      "evidence": "0000416222",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "277"
    },
    {
      "sourceid": "3",
      "other": "0000001052, which evaluates to: 1969-12-31 19:17:32",
      "method": "GET",
      "evidence": "0000001052",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "278"
    },
    {
      "sourceid": "3",
      "other": "0000338966, which evaluates to: 1970-01-04 17:09:26",
      "method": "GET",
      "evidence": "0000338966",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "279"
    },
    {
      "sourceid": "3",
      "other": "0000000022, which evaluates to: 1969-12-31 19:00:22",
      "method": "GET",
      "evidence": "0000000022",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "280"
    },
    {
      "sourceid": "3",
      "other": "0000001033, which evaluates to: 1969-12-31 19:17:13",
      "method": "GET",
      "evidence": "0000001033",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "281"
    },
    {
      "sourceid": "3",
      "other": "0000001156, which evaluates to: 1969-12-31 19:19:16",
      "method": "GET",
      "evidence": "0000001156",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "282"
    },
    {
      "sourceid": "3",
      "other": "0000033287, which evaluates to: 1970-01-01 04:14:47",
      "method": "GET",
      "evidence": "0000033287",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "283"
    },
    {
      "sourceid": "3",
      "other": "0000001343, which evaluates to: 1969-12-31 19:22:23",
      "method": "GET",
      "evidence": "0000001343",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "284"
    },
    {
      "sourceid": "3",
      "other": "0000030762, which evaluates to: 1970-01-01 03:32:42",
      "method": "GET",
      "evidence": "0000030762",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "285"
    },
    {
      "sourceid": "3",
      "other": "0000403185, which evaluates to: 1970-01-05 10:59:45",
      "method": "GET",
      "evidence": "0000403185",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "286"
    },
    {
      "sourceid": "3",
      "other": "0000415821, which evaluates to: 1970-01-05 14:30:21",
      "method": "GET",
      "evidence": "0000415821",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "287"
    },
    {
      "sourceid": "3",
      "other": "0000036062, which evaluates to: 1970-01-01 05:01:02",
      "method": "GET",
      "evidence": "0000036062",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "288"
    },
    {
      "sourceid": "3",
      "other": "0000362045, which evaluates to: 1970-01-04 23:34:05",
      "method": "GET",
      "evidence": "0000362045",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "289"
    },
    {
      "sourceid": "3",
      "other": "0000036959, which evaluates to: 1970-01-01 05:15:59",
      "method": "GET",
      "evidence": "0000036959",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "290"
    },
    {
      "sourceid": "3",
      "other": "0000030783, which evaluates to: 1970-01-01 03:33:03",
      "method": "GET",
      "evidence": "0000030783",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "291"
    },
    {
      "sourceid": "3",
      "other": "0000032438, which evaluates to: 1970-01-01 04:00:38",
      "method": "GET",
      "evidence": "0000032438",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "292"
    },
    {
      "sourceid": "3",
      "other": "0000032459, which evaluates to: 1970-01-01 04:00:59",
      "method": "GET",
      "evidence": "0000032459",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "293"
    },
    {
      "sourceid": "3",
      "other": "0000033267, which evaluates to: 1970-01-01 04:14:27",
      "method": "GET",
      "evidence": "0000033267",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "294"
    },
    {
      "sourceid": "3",
      "other": "0000033323, which evaluates to: 1970-01-01 04:15:23",
      "method": "GET",
      "evidence": "0000033323",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "295"
    },
    {
      "sourceid": "3",
      "other": "0000036041, which evaluates to: 1970-01-01 05:00:41",
      "method": "GET",
      "evidence": "0000036041",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "296"
    },
    {
      "sourceid": "3",
      "other": "0000036099, which evaluates to: 1970-01-01 05:01:39",
      "method": "GET",
      "evidence": "0000036099",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "297"
    },
    {
      "sourceid": "3",
      "other": "0000036939, which evaluates to: 1970-01-01 05:15:39",
      "method": "GET",
      "evidence": "0000036939",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "298"
    },
    {
      "sourceid": "3",
      "other": "0000037973, which evaluates to: 1970-01-01 05:32:53",
      "method": "GET",
      "evidence": "0000037973",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "299"
    },
    {
      "sourceid": "3",
      "other": "0000036996, which evaluates to: 1970-01-01 05:16:36",
      "method": "GET",
      "evidence": "0000036996",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "300"
    },
    {
      "sourceid": "3",
      "other": "0000037953, which evaluates to: 1970-01-01 05:32:33",
      "method": "GET",
      "evidence": "0000037953",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "301"
    },
    {
      "sourceid": "3",
      "other": "0000038095, which evaluates to: 1970-01-01 05:34:55",
      "method": "GET",
      "evidence": "0000038095",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "302"
    },
    {
      "sourceid": "3",
      "other": "0000367698, which evaluates to: 1970-01-05 01:08:18",
      "method": "GET",
      "evidence": "0000367698",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "303"
    },
    {
      "sourceid": "3",
      "other": "0000038233, which evaluates to: 1970-01-01 05:37:13",
      "method": "GET",
      "evidence": "0000038233",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "304"
    },
    {
      "sourceid": "3",
      "other": "0000347343, which evaluates to: 1970-01-04 19:29:03",
      "method": "GET",
      "evidence": "0000347343",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "305"
    },
    {
      "sourceid": "3",
      "other": "0000347234, which evaluates to: 1970-01-04 19:27:14",
      "method": "GET",
      "evidence": "0000347234",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "306"
    },
    {
      "sourceid": "3",
      "other": "0000347125, which evaluates to: 1970-01-04 19:25:25",
      "method": "GET",
      "evidence": "0000347125",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "307"
    },
    {
      "sourceid": "3",
      "other": "0000347016, which evaluates to: 1970-01-04 19:23:36",
      "method": "GET",
      "evidence": "0000347016",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "308"
    },
    {
      "sourceid": "3",
      "other": "0000346907, which evaluates to: 1970-01-04 19:21:47",
      "method": "GET",
      "evidence": "0000346907",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "309"
    },
    {
      "sourceid": "3",
      "other": "0000346798, which evaluates to: 1970-01-04 19:19:58",
      "method": "GET",
      "evidence": "0000346798",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "310"
    },
    {
      "sourceid": "3",
      "other": "0000346689, which evaluates to: 1970-01-04 19:18:09",
      "method": "GET",
      "evidence": "0000346689",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "311"
    },
    {
      "sourceid": "3",
      "other": "0000346579, which evaluates to: 1970-01-04 19:16:19",
      "method": "GET",
      "evidence": "0000346579",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "312"
    },
    {
      "sourceid": "3",
      "other": "0000346469, which evaluates to: 1970-01-04 19:14:29",
      "method": "GET",
      "evidence": "0000346469",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "313"
    },
    {
      "sourceid": "3",
      "other": "0000346359, which evaluates to: 1970-01-04 19:12:39",
      "method": "GET",
      "evidence": "0000346359",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "314"
    },
    {
      "sourceid": "3",
      "other": "0000346247, which evaluates to: 1970-01-04 19:10:47",
      "method": "GET",
      "evidence": "0000346247",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "315"
    },
    {
      "sourceid": "3",
      "other": "0000042762, which evaluates to: 1970-01-01 06:52:42",
      "method": "GET",
      "evidence": "0000042762",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "316"
    },
    {
      "sourceid": "3",
      "other": "0000038330, which evaluates to: 1970-01-01 05:38:50",
      "method": "GET",
      "evidence": "0000038330",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "317"
    },
    {
      "sourceid": "3",
      "other": "0000042741, which evaluates to: 1970-01-01 06:52:21",
      "method": "GET",
      "evidence": "0000042741",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "318"
    },
    {
      "sourceid": "3",
      "other": "0000042884, which evaluates to: 1970-01-01 06:54:44",
      "method": "GET",
      "evidence": "0000042884",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "319"
    },
    {
      "sourceid": "3",
      "other": "0000386523, which evaluates to: 1970-01-05 06:22:03",
      "method": "GET",
      "evidence": "0000386523",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "320"
    },
    {
      "sourceid": "3",
      "other": "0000339473, which evaluates to: 1970-01-04 17:17:53",
      "method": "GET",
      "evidence": "0000339473",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "321"
    },
    {
      "sourceid": "3",
      "other": "0000339427, which evaluates to: 1970-01-04 17:17:07",
      "method": "GET",
      "evidence": "0000339427",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "322"
    },
    {
      "sourceid": "3",
      "other": "0000043035, which evaluates to: 1970-01-01 06:57:15",
      "method": "GET",
      "evidence": "0000043035",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "323"
    },
    {
      "sourceid": "3",
      "other": "0000346076, which evaluates to: 1970-01-04 19:07:56",
      "method": "GET",
      "evidence": "0000346076",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "324"
    },
    {
      "sourceid": "3",
      "other": "0000345859, which evaluates to: 1970-01-04 19:04:19",
      "method": "GET",
      "evidence": "0000345859",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "325"
    },
    {
      "sourceid": "3",
      "other": "0000345678, which evaluates to: 1970-01-04 19:01:18",
      "method": "GET",
      "evidence": "0000345678",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "326"
    },
    {
      "sourceid": "3",
      "other": "0000345449, which evaluates to: 1970-01-04 18:57:29",
      "method": "GET",
      "evidence": "0000345449",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "327"
    },
    {
      "sourceid": "3",
      "other": "0000046895, which evaluates to: 1970-01-01 08:01:35",
      "method": "GET",
      "evidence": "0000046895",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "328"
    },
    {
      "sourceid": "3",
      "other": "0000043083, which evaluates to: 1970-01-01 06:58:03",
      "method": "GET",
      "evidence": "0000043083",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "329"
    },
    {
      "sourceid": "3",
      "other": "0000046874, which evaluates to: 1970-01-01 08:01:14",
      "method": "GET",
      "evidence": "0000046874",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "330"
    },
    {
      "sourceid": "3",
      "other": "0000047017, which evaluates to: 1970-01-01 08:03:37",
      "method": "GET",
      "evidence": "0000047017",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "331"
    },
    {
      "sourceid": "3",
      "other": "0000339558, which evaluates to: 1970-01-04 17:19:18",
      "method": "GET",
      "evidence": "0000339558",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "332"
    },
    {
      "sourceid": "3",
      "other": "0000339599, which evaluates to: 1970-01-04 17:19:59",
      "method": "GET",
      "evidence": "0000339599",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "333"
    },
    {
      "sourceid": "3",
      "other": "0000047168, which evaluates to: 1970-01-01 08:06:08",
      "method": "GET",
      "evidence": "0000047168",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "334"
    },
    {
      "sourceid": "3",
      "other": "0000345278, which evaluates to: 1970-01-04 18:54:38",
      "method": "GET",
      "evidence": "0000345278",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "335"
    },
    {
      "sourceid": "3",
      "other": "0000345045, which evaluates to: 1970-01-04 18:50:45",
      "method": "GET",
      "evidence": "0000345045",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "336"
    },
    {
      "sourceid": "3",
      "other": "0000050340, which evaluates to: 1970-01-01 08:59:00",
      "method": "GET",
      "evidence": "0000050340",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "337"
    },
    {
      "sourceid": "3",
      "other": "0000047202, which evaluates to: 1970-01-01 08:06:42",
      "method": "GET",
      "evidence": "0000047202",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "338"
    },
    {
      "sourceid": "3",
      "other": "0000050319, which evaluates to: 1970-01-01 08:58:39",
      "method": "GET",
      "evidence": "0000050319",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "339"
    },
    {
      "sourceid": "3",
      "other": "0000050462, which evaluates to: 1970-01-01 09:01:02",
      "method": "GET",
      "evidence": "0000050462",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "340"
    },
    {
      "sourceid": "3",
      "other": "0000390308, which evaluates to: 1970-01-05 07:25:08",
      "method": "GET",
      "evidence": "0000390308",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "341"
    },
    {
      "sourceid": "3",
      "other": "0000409519, which evaluates to: 1970-01-05 12:45:19",
      "method": "GET",
      "evidence": "0000409519",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "342"
    },
    {
      "sourceid": "3",
      "other": "0000339823, which evaluates to: 1970-01-04 17:23:43",
      "method": "GET",
      "evidence": "0000339823",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "343"
    },
    {
      "sourceid": "3",
      "other": "0000050639, which evaluates to: 1970-01-01 09:03:59",
      "method": "GET",
      "evidence": "0000050639",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "344"
    },
    {
      "sourceid": "3",
      "other": "0000344864, which evaluates to: 1970-01-04 18:47:44",
      "method": "GET",
      "evidence": "0000344864",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "345"
    },
    {
      "sourceid": "3",
      "other": "0000344683, which evaluates to: 1970-01-04 18:44:43",
      "method": "GET",
      "evidence": "0000344683",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "346"
    },
    {
      "sourceid": "3",
      "other": "0000344508, which evaluates to: 1970-01-04 18:41:48",
      "method": "GET",
      "evidence": "0000344508",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "347"
    },
    {
      "sourceid": "3",
      "other": "0000344243, which evaluates to: 1970-01-04 18:37:23",
      "method": "GET",
      "evidence": "0000344243",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "348"
    },
    {
      "sourceid": "3",
      "other": "0000053420, which evaluates to: 1970-01-01 09:50:20",
      "method": "GET",
      "evidence": "0000053420",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "349"
    },
    {
      "sourceid": "3",
      "other": "0000050687, which evaluates to: 1970-01-01 09:04:47",
      "method": "GET",
      "evidence": "0000050687",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "350"
    },
    {
      "sourceid": "3",
      "other": "0000053399, which evaluates to: 1970-01-01 09:49:59",
      "method": "GET",
      "evidence": "0000053399",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "351"
    },
    {
      "sourceid": "3",
      "other": "0000053527, which evaluates to: 1970-01-01 09:52:07",
      "method": "GET",
      "evidence": "0000053527",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "352"
    },
    {
      "sourceid": "3",
      "other": "0000055357, which evaluates to: 1970-01-01 10:22:37",
      "method": "GET",
      "evidence": "0000055357",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "353"
    },
    {
      "sourceid": "3",
      "other": "0000053704, which evaluates to: 1970-01-01 09:55:04",
      "method": "GET",
      "evidence": "0000053704",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "354"
    },
    {
      "sourceid": "3",
      "other": "0000055336, which evaluates to: 1970-01-01 10:22:16",
      "method": "GET",
      "evidence": "0000055336",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "355"
    },
    {
      "sourceid": "3",
      "other": "0000055464, which evaluates to: 1970-01-01 10:24:24",
      "method": "GET",
      "evidence": "0000055464",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "356"
    },
    {
      "sourceid": "3",
      "other": "0000060613, which evaluates to: 1970-01-01 11:50:13",
      "method": "GET",
      "evidence": "0000060613",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "357"
    },
    {
      "sourceid": "3",
      "other": "0000055603, which evaluates to: 1970-01-01 10:26:43",
      "method": "GET",
      "evidence": "0000055603",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "358"
    },
    {
      "sourceid": "3",
      "other": "0000060592, which evaluates to: 1970-01-01 11:49:52",
      "method": "GET",
      "evidence": "0000060592",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "359"
    },
    {
      "sourceid": "3",
      "other": "0000060720, which evaluates to: 1970-01-01 11:52:00",
      "method": "GET",
      "evidence": "0000060720",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "360"
    },
    {
      "sourceid": "3",
      "other": "0000339514, which evaluates to: 1970-01-04 17:18:34",
      "method": "GET",
      "evidence": "0000339514",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "361"
    },
    {
      "sourceid": "3",
      "other": "0000066769, which evaluates to: 1970-01-01 13:32:49",
      "method": "GET",
      "evidence": "0000066769",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "362"
    },
    {
      "sourceid": "3",
      "other": "0000339090, which evaluates to: 1970-01-04 17:11:30",
      "method": "GET",
      "evidence": "0000339090",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "363"
    },
    {
      "sourceid": "3",
      "other": "0000060897, which evaluates to: 1970-01-01 11:54:57",
      "method": "GET",
      "evidence": "0000060897",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "364"
    },
    {
      "sourceid": "3",
      "other": "0000066748, which evaluates to: 1970-01-01 13:32:28",
      "method": "GET",
      "evidence": "0000066748",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "365"
    },
    {
      "sourceid": "3",
      "other": "0000066892, which evaluates to: 1970-01-01 13:34:52",
      "method": "GET",
      "evidence": "0000066892",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "366"
    },
    {
      "sourceid": "3",
      "other": "0000339780, which evaluates to: 1970-01-04 17:23:00",
      "method": "GET",
      "evidence": "0000339780",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "367"
    },
    {
      "sourceid": "3",
      "other": "0000067056, which evaluates to: 1970-01-01 13:37:36",
      "method": "GET",
      "evidence": "0000067056",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "368"
    },
    {
      "sourceid": "3",
      "other": "0000344068, which evaluates to: 1970-01-04 18:34:28",
      "method": "GET",
      "evidence": "0000344068",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "369"
    },
    {
      "sourceid": "3",
      "other": "0000343893, which evaluates to: 1970-01-04 18:31:33",
      "method": "GET",
      "evidence": "0000343893",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "370"
    },
    {
      "sourceid": "3",
      "other": "0000343724, which evaluates to: 1970-01-04 18:28:44",
      "method": "GET",
      "evidence": "0000343724",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "371"
    },
    {
      "sourceid": "3",
      "other": "0000343513, which evaluates to: 1970-01-04 18:25:13",
      "method": "GET",
      "evidence": "0000343513",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "372"
    },
    {
      "sourceid": "3",
      "other": "0000070338, which evaluates to: 1970-01-01 14:32:18",
      "method": "GET",
      "evidence": "0000070338",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "373"
    },
    {
      "sourceid": "3",
      "other": "0000067104, which evaluates to: 1970-01-01 13:38:24",
      "method": "GET",
      "evidence": "0000067104",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "374"
    },
    {
      "sourceid": "3",
      "other": "0000070317, which evaluates to: 1970-01-01 14:31:57",
      "method": "GET",
      "evidence": "0000070317",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "375"
    },
    {
      "sourceid": "3",
      "other": "0000070447, which evaluates to: 1970-01-01 14:34:07",
      "method": "GET",
      "evidence": "0000070447",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "376"
    },
    {
      "sourceid": "3",
      "other": "0000141483, which evaluates to: 1970-01-02 10:18:03",
      "method": "GET",
      "evidence": "0000141483",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "377"
    },
    {
      "sourceid": "3",
      "other": "0000143033, which evaluates to: 1970-01-02 10:43:53",
      "method": "GET",
      "evidence": "0000143033",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "378"
    },
    {
      "sourceid": "3",
      "other": "0000070708, which evaluates to: 1970-01-01 14:38:28",
      "method": "GET",
      "evidence": "0000070708",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "379"
    },
    {
      "sourceid": "3",
      "other": "0000071009, which evaluates to: 1970-01-01 14:43:29",
      "method": "GET",
      "evidence": "0000071009",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "380"
    },
    {
      "sourceid": "3",
      "other": "0000071029, which evaluates to: 1970-01-01 14:43:49",
      "method": "GET",
      "evidence": "0000071029",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "381"
    },
    {
      "sourceid": "3",
      "other": "0000339642, which evaluates to: 1970-01-04 17:20:42",
      "method": "GET",
      "evidence": "0000339642",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "382"
    },
    {
      "sourceid": "3",
      "other": "0000145648, which evaluates to: 1970-01-02 11:27:28",
      "method": "GET",
      "evidence": "0000145648",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "383"
    },
    {
      "sourceid": "3",
      "other": "0000146679, which evaluates to: 1970-01-02 11:44:39",
      "method": "GET",
      "evidence": "0000146679",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "384"
    },
    {
      "sourceid": "3",
      "other": "0000071122, which evaluates to: 1970-01-01 14:45:22",
      "method": "GET",
      "evidence": "0000071122",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "385"
    },
    {
      "sourceid": "3",
      "other": "0000141460, which evaluates to: 1970-01-02 10:17:40",
      "method": "GET",
      "evidence": "0000141460",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "386"
    },
    {
      "sourceid": "3",
      "other": "0000143055, which evaluates to: 1970-01-02 10:44:15",
      "method": "GET",
      "evidence": "0000143055",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "387"
    },
    {
      "sourceid": "3",
      "other": "0000145626, which evaluates to: 1970-01-02 11:27:06",
      "method": "GET",
      "evidence": "0000145626",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "388"
    },
    {
      "sourceid": "3",
      "other": "0000145816, which evaluates to: 1970-01-02 11:30:16",
      "method": "GET",
      "evidence": "0000145816",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "389"
    },
    {
      "sourceid": "3",
      "other": "0000146658, which evaluates to: 1970-01-02 11:44:18",
      "method": "GET",
      "evidence": "0000146658",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "390"
    },
    {
      "sourceid": "3",
      "other": "0000149275, which evaluates to: 1970-01-02 12:27:55",
      "method": "GET",
      "evidence": "0000149275",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "391"
    },
    {
      "sourceid": "3",
      "other": "0000146718, which evaluates to: 1970-01-02 11:45:18",
      "method": "GET",
      "evidence": "0000146718",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "392"
    },
    {
      "sourceid": "3",
      "other": "0000149253, which evaluates to: 1970-01-02 12:27:33",
      "method": "GET",
      "evidence": "0000149253",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "393"
    },
    {
      "sourceid": "3",
      "other": "0000149386, which evaluates to: 1970-01-02 12:29:46",
      "method": "GET",
      "evidence": "0000149386",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "394"
    },
    {
      "sourceid": "3",
      "other": "0000150038, which evaluates to: 1970-01-02 12:40:38",
      "method": "GET",
      "evidence": "0000150038",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "395"
    },
    {
      "sourceid": "3",
      "other": "0000152055, which evaluates to: 1970-01-02 13:14:15",
      "method": "GET",
      "evidence": "0000152055",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "396"
    },
    {
      "sourceid": "3",
      "other": "0000149622, which evaluates to: 1970-01-02 12:33:42",
      "method": "GET",
      "evidence": "0000149622",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "397"
    },
    {
      "sourceid": "3",
      "other": "0000149925, which evaluates to: 1970-01-02 12:38:45",
      "method": "GET",
      "evidence": "0000149925",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "398"
    },
    {
      "sourceid": "3",
      "other": "0000149945, which evaluates to: 1970-01-02 12:39:05",
      "method": "GET",
      "evidence": "0000149945",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "399"
    },
    {
      "sourceid": "3",
      "other": "0000152077, which evaluates to: 1970-01-02 13:14:37",
      "method": "GET",
      "evidence": "0000152077",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "400"
    },
    {
      "sourceid": "3",
      "other": "0000238224, which evaluates to: 1970-01-03 13:10:24",
      "method": "GET",
      "evidence": "0000238224",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "401"
    },
    {
      "sourceid": "3",
      "other": "0000238247, which evaluates to: 1970-01-03 13:10:47",
      "method": "GET",
      "evidence": "0000238247",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "402"
    },
    {
      "sourceid": "3",
      "other": "0000241127, which evaluates to: 1970-01-03 13:58:47",
      "method": "GET",
      "evidence": "0000241127",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "403"
    },
    {
      "sourceid": "3",
      "other": "0000242956, which evaluates to: 1970-01-03 14:29:16",
      "method": "GET",
      "evidence": "0000242956",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "404"
    },
    {
      "sourceid": "3",
      "other": "0000241149, which evaluates to: 1970-01-03 13:59:09",
      "method": "GET",
      "evidence": "0000241149",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "405"
    },
    {
      "sourceid": "3",
      "other": "0000242934, which evaluates to: 1970-01-03 14:28:54",
      "method": "GET",
      "evidence": "0000242934",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "406"
    },
    {
      "sourceid": "3",
      "other": "0000243067, which evaluates to: 1970-01-03 14:31:07",
      "method": "GET",
      "evidence": "0000243067",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "407"
    },
    {
      "sourceid": "3",
      "other": "0000245724, which evaluates to: 1970-01-03 15:15:24",
      "method": "GET",
      "evidence": "0000245724",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "408"
    },
    {
      "sourceid": "3",
      "other": "0000243207, which evaluates to: 1970-01-03 14:33:27",
      "method": "GET",
      "evidence": "0000243207",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "409"
    },
    {
      "sourceid": "3",
      "other": "0000245702, which evaluates to: 1970-01-03 15:15:02",
      "method": "GET",
      "evidence": "0000245702",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "410"
    },
    {
      "sourceid": "3",
      "other": "0000245835, which evaluates to: 1970-01-03 15:17:15",
      "method": "GET",
      "evidence": "0000245835",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "411"
    },
    {
      "sourceid": "3",
      "other": "0000326067, which evaluates to: 1970-01-04 13:34:27",
      "method": "GET",
      "evidence": "0000326067",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "412"
    },
    {
      "sourceid": "3",
      "other": "0000327873, which evaluates to: 1970-01-04 14:04:33",
      "method": "GET",
      "evidence": "0000327873",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "413"
    },
    {
      "sourceid": "3",
      "other": "0000246071, which evaluates to: 1970-01-03 15:21:11",
      "method": "GET",
      "evidence": "0000246071",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "414"
    },
    {
      "sourceid": "3",
      "other": "0000246374, which evaluates to: 1970-01-03 15:26:14",
      "method": "GET",
      "evidence": "0000246374",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "415"
    },
    {
      "sourceid": "3",
      "other": "0000246394, which evaluates to: 1970-01-03 15:26:34",
      "method": "GET",
      "evidence": "0000246394",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "416"
    },
    {
      "sourceid": "3",
      "other": "0000246487, which evaluates to: 1970-01-03 15:28:07",
      "method": "GET",
      "evidence": "0000246487",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "417"
    },
    {
      "sourceid": "3",
      "other": "0000326044, which evaluates to: 1970-01-04 13:34:04",
      "method": "GET",
      "evidence": "0000326044",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "418"
    },
    {
      "sourceid": "3",
      "other": "0000327895, which evaluates to: 1970-01-04 14:04:55",
      "method": "GET",
      "evidence": "0000327895",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "419"
    },
    {
      "sourceid": "3",
      "other": "0000330571, which evaluates to: 1970-01-04 14:49:31",
      "method": "GET",
      "evidence": "0000330571",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "420"
    },
    {
      "sourceid": "3",
      "other": "0000332856, which evaluates to: 1970-01-04 15:27:36",
      "method": "GET",
      "evidence": "0000332856",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "421"
    },
    {
      "sourceid": "3",
      "other": "0000330593, which evaluates to: 1970-01-04 14:49:53",
      "method": "GET",
      "evidence": "0000330593",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "422"
    },
    {
      "sourceid": "3",
      "other": "0000332834, which evaluates to: 1970-01-04 15:27:14",
      "method": "GET",
      "evidence": "0000332834",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "423"
    },
    {
      "sourceid": "3",
      "other": "0000332967, which evaluates to: 1970-01-04 15:29:27",
      "method": "GET",
      "evidence": "0000332967",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "424"
    },
    {
      "sourceid": "3",
      "other": "0000335285, which evaluates to: 1970-01-04 16:08:05",
      "method": "GET",
      "evidence": "0000335285",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "425"
    },
    {
      "sourceid": "3",
      "other": "0000333107, which evaluates to: 1970-01-04 15:31:47",
      "method": "GET",
      "evidence": "0000333107",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "426"
    },
    {
      "sourceid": "3",
      "other": "0000335263, which evaluates to: 1970-01-04 16:07:43",
      "method": "GET",
      "evidence": "0000335263",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "427"
    },
    {
      "sourceid": "3",
      "other": "0000335396, which evaluates to: 1970-01-04 16:09:56",
      "method": "GET",
      "evidence": "0000335396",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "428"
    },
    {
      "sourceid": "3",
      "other": "0000406905, which evaluates to: 1970-01-05 12:01:45",
      "method": "GET",
      "evidence": "0000406905",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "429"
    },
    {
      "sourceid": "3",
      "other": "0000339382, which evaluates to: 1970-01-04 17:16:22",
      "method": "GET",
      "evidence": "0000339382",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "430"
    },
    {
      "sourceid": "3",
      "other": "0000338482, which evaluates to: 1970-01-04 17:01:22",
      "method": "GET",
      "evidence": "0000338482",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "431"
    },
    {
      "sourceid": "3",
      "other": "0000335575, which evaluates to: 1970-01-04 16:12:55",
      "method": "GET",
      "evidence": "0000335575",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "432"
    },
    {
      "sourceid": "3",
      "other": "0000338460, which evaluates to: 1970-01-04 17:01:00",
      "method": "GET",
      "evidence": "0000338460",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "433"
    },
    {
      "sourceid": "3",
      "other": "0000338609, which evaluates to: 1970-01-04 17:03:29",
      "method": "GET",
      "evidence": "0000338609",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "434"
    },
    {
      "sourceid": "3",
      "other": "0000339686, which evaluates to: 1970-01-04 17:21:26",
      "method": "GET",
      "evidence": "0000339686",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "435"
    },
    {
      "sourceid": "3",
      "other": "0000339732, which evaluates to: 1970-01-04 17:22:12",
      "method": "GET",
      "evidence": "0000339732",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "436"
    },
    {
      "sourceid": "3",
      "other": "0000338801, which evaluates to: 1970-01-04 17:06:41",
      "method": "GET",
      "evidence": "0000338801",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "437"
    },
    {
      "sourceid": "3",
      "other": "0000343338, which evaluates to: 1970-01-04 18:22:18",
      "method": "GET",
      "evidence": "0000343338",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "438"
    },
    {
      "sourceid": "3",
      "other": "0000343122, which evaluates to: 1970-01-04 18:18:42",
      "method": "GET",
      "evidence": "0000343122",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "439"
    },
    {
      "sourceid": "3",
      "other": "0000342946, which evaluates to: 1970-01-04 18:15:46",
      "method": "GET",
      "evidence": "0000342946",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "440"
    },
    {
      "sourceid": "3",
      "other": "0000342723, which evaluates to: 1970-01-04 18:12:03",
      "method": "GET",
      "evidence": "0000342723",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "441"
    },
    {
      "sourceid": "3",
      "other": "0000342547, which evaluates to: 1970-01-04 18:09:07",
      "method": "GET",
      "evidence": "0000342547",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "442"
    },
    {
      "sourceid": "3",
      "other": "0000342307, which evaluates to: 1970-01-04 18:05:07",
      "method": "GET",
      "evidence": "0000342307",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "443"
    },
    {
      "sourceid": "3",
      "other": "0000342125, which evaluates to: 1970-01-04 18:02:05",
      "method": "GET",
      "evidence": "0000342125",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "444"
    },
    {
      "sourceid": "3",
      "other": "0000341900, which evaluates to: 1970-01-04 17:58:20",
      "method": "GET",
      "evidence": "0000341900",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "445"
    },
    {
      "sourceid": "3",
      "other": "0000341718, which evaluates to: 1970-01-04 17:55:18",
      "method": "GET",
      "evidence": "0000341718",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "446"
    },
    {
      "sourceid": "3",
      "other": "0000341486, which evaluates to: 1970-01-04 17:51:26",
      "method": "GET",
      "evidence": "0000341486",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "447"
    },
    {
      "sourceid": "3",
      "other": "0000341304, which evaluates to: 1970-01-04 17:48:24",
      "method": "GET",
      "evidence": "0000341304",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "448"
    },
    {
      "sourceid": "3",
      "other": "0000341070, which evaluates to: 1970-01-04 17:44:30",
      "method": "GET",
      "evidence": "0000341070",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "449"
    },
    {
      "sourceid": "3",
      "other": "0000340892, which evaluates to: 1970-01-04 17:41:32",
      "method": "GET",
      "evidence": "0000340892",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "450"
    },
    {
      "sourceid": "3",
      "other": "0000340662, which evaluates to: 1970-01-04 17:37:42",
      "method": "GET",
      "evidence": "0000340662",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "451"
    },
    {
      "sourceid": "3",
      "other": "0000340484, which evaluates to: 1970-01-04 17:34:44",
      "method": "GET",
      "evidence": "0000340484",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "452"
    },
    {
      "sourceid": "3",
      "other": "0000340261, which evaluates to: 1970-01-04 17:31:01",
      "method": "GET",
      "evidence": "0000340261",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "453"
    },
    {
      "sourceid": "3",
      "other": "0000340083, which evaluates to: 1970-01-04 17:28:03",
      "method": "GET",
      "evidence": "0000340083",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "454"
    },
    {
      "sourceid": "3",
      "other": "0000339866, which evaluates to: 1970-01-04 17:24:26",
      "method": "GET",
      "evidence": "0000339866",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "455"
    },
    {
      "sourceid": "3",
      "other": "0000339222, which evaluates to: 1970-01-04 17:13:42",
      "method": "GET",
      "evidence": "0000339222",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "456"
    },
    {
      "sourceid": "3",
      "other": "0000339315, which evaluates to: 1970-01-04 17:15:15",
      "method": "GET",
      "evidence": "0000339315",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "457"
    },
    {
      "sourceid": "3",
      "other": "0000339986, which evaluates to: 1970-01-04 17:26:26",
      "method": "GET",
      "evidence": "0000339986",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "458"
    },
    {
      "sourceid": "3",
      "other": "0000340044, which evaluates to: 1970-01-04 17:27:24",
      "method": "GET",
      "evidence": "0000340044",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "459"
    },
    {
      "sourceid": "3",
      "other": "0000340203, which evaluates to: 1970-01-04 17:30:03",
      "method": "GET",
      "evidence": "0000340203",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "460"
    },
    {
      "sourceid": "3",
      "other": "0000340381, which evaluates to: 1970-01-04 17:33:01",
      "method": "GET",
      "evidence": "0000340381",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "461"
    },
    {
      "sourceid": "3",
      "other": "0000340439, which evaluates to: 1970-01-04 17:33:59",
      "method": "GET",
      "evidence": "0000340439",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "462"
    },
    {
      "sourceid": "3",
      "other": "0000340604, which evaluates to: 1970-01-04 17:36:44",
      "method": "GET",
      "evidence": "0000340604",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "463"
    },
    {
      "sourceid": "3",
      "other": "0000340784, which evaluates to: 1970-01-04 17:39:44",
      "method": "GET",
      "evidence": "0000340784",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "464"
    },
    {
      "sourceid": "3",
      "other": "0000340842, which evaluates to: 1970-01-04 17:40:42",
      "method": "GET",
      "evidence": "0000340842",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "465"
    },
    {
      "sourceid": "3",
      "other": "0000341012, which evaluates to: 1970-01-04 17:43:32",
      "method": "GET",
      "evidence": "0000341012",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "466"
    },
    {
      "sourceid": "3",
      "other": "0000341194, which evaluates to: 1970-01-04 17:46:34",
      "method": "GET",
      "evidence": "0000341194",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "467"
    },
    {
      "sourceid": "3",
      "other": "0000341252, which evaluates to: 1970-01-04 17:47:32",
      "method": "GET",
      "evidence": "0000341252",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "468"
    },
    {
      "sourceid": "3",
      "other": "0000341428, which evaluates to: 1970-01-04 17:50:28",
      "method": "GET",
      "evidence": "0000341428",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "469"
    },
    {
      "sourceid": "3",
      "other": "0000341610, which evaluates to: 1970-01-04 17:53:30",
      "method": "GET",
      "evidence": "0000341610",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "470"
    },
    {
      "sourceid": "3",
      "other": "0000341668, which evaluates to: 1970-01-04 17:54:28",
      "method": "GET",
      "evidence": "0000341668",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "471"
    },
    {
      "sourceid": "3",
      "other": "0000341842, which evaluates to: 1970-01-04 17:57:22",
      "method": "GET",
      "evidence": "0000341842",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "472"
    },
    {
      "sourceid": "3",
      "other": "0000342024, which evaluates to: 1970-01-04 18:00:24",
      "method": "GET",
      "evidence": "0000342024",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "473"
    },
    {
      "sourceid": "3",
      "other": "0000342082, which evaluates to: 1970-01-04 18:01:22",
      "method": "GET",
      "evidence": "0000342082",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "474"
    },
    {
      "sourceid": "3",
      "other": "0000342249, which evaluates to: 1970-01-04 18:04:09",
      "method": "GET",
      "evidence": "0000342249",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "475"
    },
    {
      "sourceid": "3",
      "other": "0000342425, which evaluates to: 1970-01-04 18:07:05",
      "method": "GET",
      "evidence": "0000342425",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "476"
    },
    {
      "sourceid": "3",
      "other": "0000342483, which evaluates to: 1970-01-04 18:08:03",
      "method": "GET",
      "evidence": "0000342483",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "477"
    },
    {
      "sourceid": "3",
      "other": "0000342665, which evaluates to: 1970-01-04 18:11:05",
      "method": "GET",
      "evidence": "0000342665",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "478"
    },
    {
      "sourceid": "3",
      "other": "0000342841, which evaluates to: 1970-01-04 18:14:01",
      "method": "GET",
      "evidence": "0000342841",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "479"
    },
    {
      "sourceid": "3",
      "other": "0000342899, which evaluates to: 1970-01-04 18:14:59",
      "method": "GET",
      "evidence": "0000342899",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "480"
    },
    {
      "sourceid": "3",
      "other": "0000343064, which evaluates to: 1970-01-04 18:17:44",
      "method": "GET",
      "evidence": "0000343064",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "481"
    },
    {
      "sourceid": "3",
      "other": "0000343239, which evaluates to: 1970-01-04 18:20:39",
      "method": "GET",
      "evidence": "0000343239",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "482"
    },
    {
      "sourceid": "3",
      "other": "0000343297, which evaluates to: 1970-01-04 18:21:37",
      "method": "GET",
      "evidence": "0000343297",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "483"
    },
    {
      "sourceid": "3",
      "other": "0000343455, which evaluates to: 1970-01-04 18:24:15",
      "method": "GET",
      "evidence": "0000343455",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "484"
    },
    {
      "sourceid": "3",
      "other": "0000343624, which evaluates to: 1970-01-04 18:27:04",
      "method": "GET",
      "evidence": "0000343624",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "485"
    },
    {
      "sourceid": "3",
      "other": "0000343682, which evaluates to: 1970-01-04 18:28:02",
      "method": "GET",
      "evidence": "0000343682",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "486"
    },
    {
      "sourceid": "3",
      "other": "0000343835, which evaluates to: 1970-01-04 18:30:35",
      "method": "GET",
      "evidence": "0000343835",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "487"
    },
    {
      "sourceid": "3",
      "other": "0000344010, which evaluates to: 1970-01-04 18:33:30",
      "method": "GET",
      "evidence": "0000344010",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "488"
    },
    {
      "sourceid": "3",
      "other": "0000344185, which evaluates to: 1970-01-04 18:36:25",
      "method": "GET",
      "evidence": "0000344185",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "489"
    },
    {
      "sourceid": "3",
      "other": "0000344360, which evaluates to: 1970-01-04 18:39:20",
      "method": "GET",
      "evidence": "0000344360",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "490"
    },
    {
      "sourceid": "3",
      "other": "0000344418, which evaluates to: 1970-01-04 18:40:18",
      "method": "GET",
      "evidence": "0000344418",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "491"
    },
    {
      "sourceid": "3",
      "other": "0000344625, which evaluates to: 1970-01-04 18:43:45",
      "method": "GET",
      "evidence": "0000344625",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "492"
    },
    {
      "sourceid": "3",
      "other": "0000344806, which evaluates to: 1970-01-04 18:46:46",
      "method": "GET",
      "evidence": "0000344806",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "493"
    },
    {
      "sourceid": "3",
      "other": "0000344987, which evaluates to: 1970-01-04 18:49:47",
      "method": "GET",
      "evidence": "0000344987",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "494"
    },
    {
      "sourceid": "3",
      "other": "0000345158, which evaluates to: 1970-01-04 18:52:38",
      "method": "GET",
      "evidence": "0000345158",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "495"
    },
    {
      "sourceid": "3",
      "other": "0000345216, which evaluates to: 1970-01-04 18:53:36",
      "method": "GET",
      "evidence": "0000345216",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "496"
    },
    {
      "sourceid": "3",
      "other": "0000345391, which evaluates to: 1970-01-04 18:56:31",
      "method": "GET",
      "evidence": "0000345391",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "497"
    },
    {
      "sourceid": "3",
      "other": "0000345572, which evaluates to: 1970-01-04 18:59:32",
      "method": "GET",
      "evidence": "0000345572",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "498"
    },
    {
      "sourceid": "3",
      "other": "0000345630, which evaluates to: 1970-01-04 19:00:30",
      "method": "GET",
      "evidence": "0000345630",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "499"
    },
    {
      "sourceid": "3",
      "other": "0000345801, which evaluates to: 1970-01-04 19:03:21",
      "method": "GET",
      "evidence": "0000345801",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "500"
    },
    {
      "sourceid": "3",
      "other": "0000345972, which evaluates to: 1970-01-04 19:06:12",
      "method": "GET",
      "evidence": "0000345972",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "501"
    },
    {
      "sourceid": "3",
      "other": "0000346030, which evaluates to: 1970-01-04 19:07:10",
      "method": "GET",
      "evidence": "0000346030",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "502"
    },
    {
      "sourceid": "3",
      "other": "0000346189, which evaluates to: 1970-01-04 19:09:49",
      "method": "GET",
      "evidence": "0000346189",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "503"
    },
    {
      "sourceid": "3",
      "other": "0000347452, which evaluates to: 1970-01-04 19:30:52",
      "method": "GET",
      "evidence": "0000347452",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "504"
    },
    {
      "sourceid": "3",
      "other": "0000361299, which evaluates to: 1970-01-04 23:21:39",
      "method": "GET",
      "evidence": "0000361299",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "505"
    },
    {
      "sourceid": "3",
      "other": "0000361322, which evaluates to: 1970-01-04 23:22:02",
      "method": "GET",
      "evidence": "0000361322",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "506"
    },
    {
      "sourceid": "3",
      "other": "0000361580, which evaluates to: 1970-01-04 23:26:20",
      "method": "GET",
      "evidence": "0000361580",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "507"
    },
    {
      "sourceid": "3",
      "other": "0000362225, which evaluates to: 1970-01-04 23:37:05",
      "method": "GET",
      "evidence": "0000362225",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "508"
    },
    {
      "sourceid": "3",
      "other": "0000367073, which evaluates to: 1970-01-05 00:57:53",
      "method": "GET",
      "evidence": "0000367073",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "509"
    },
    {
      "sourceid": "3",
      "other": "0000367095, which evaluates to: 1970-01-05 00:58:15",
      "method": "GET",
      "evidence": "0000367095",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "510"
    },
    {
      "sourceid": "3",
      "other": "0000367352, which evaluates to: 1970-01-05 01:02:32",
      "method": "GET",
      "evidence": "0000367352",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "511"
    },
    {
      "sourceid": "3",
      "other": "0000367377, which evaluates to: 1970-01-05 01:02:57",
      "method": "GET",
      "evidence": "0000367377",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "512"
    },
    {
      "sourceid": "3",
      "other": "0000367677, which evaluates to: 1970-01-05 01:07:57",
      "method": "GET",
      "evidence": "0000367677",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "513"
    },
    {
      "sourceid": "3",
      "other": "0000367868, which evaluates to: 1970-01-05 01:11:08",
      "method": "GET",
      "evidence": "0000367868",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "514"
    },
    {
      "sourceid": "3",
      "other": "0000385675, which evaluates to: 1970-01-05 06:07:55",
      "method": "GET",
      "evidence": "0000385675",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "515"
    },
    {
      "sourceid": "3",
      "other": "0000385698, which evaluates to: 1970-01-05 06:08:18",
      "method": "GET",
      "evidence": "0000385698",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "516"
    },
    {
      "sourceid": "3",
      "other": "0000385940, which evaluates to: 1970-01-05 06:12:20",
      "method": "GET",
      "evidence": "0000385940",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "517"
    },
    {
      "sourceid": "3",
      "other": "0000386700, which evaluates to: 1970-01-05 06:25:00",
      "method": "GET",
      "evidence": "0000386700",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "518"
    },
    {
      "sourceid": "3",
      "other": "0000389689, which evaluates to: 1970-01-05 07:14:49",
      "method": "GET",
      "evidence": "0000389689",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "519"
    },
    {
      "sourceid": "3",
      "other": "0000389711, which evaluates to: 1970-01-05 07:15:11",
      "method": "GET",
      "evidence": "0000389711",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "520"
    },
    {
      "sourceid": "3",
      "other": "0000389952, which evaluates to: 1970-01-05 07:19:12",
      "method": "GET",
      "evidence": "0000389952",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "521"
    },
    {
      "sourceid": "3",
      "other": "0000389985, which evaluates to: 1970-01-05 07:19:45",
      "method": "GET",
      "evidence": "0000389985",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "522"
    },
    {
      "sourceid": "3",
      "other": "0000390287, which evaluates to: 1970-01-05 07:24:47",
      "method": "GET",
      "evidence": "0000390287",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "523"
    },
    {
      "sourceid": "3",
      "other": "0000390475, which evaluates to: 1970-01-05 07:27:55",
      "method": "GET",
      "evidence": "0000390475",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "524"
    },
    {
      "sourceid": "3",
      "other": "0000402599, which evaluates to: 1970-01-05 10:49:59",
      "method": "GET",
      "evidence": "0000402599",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "525"
    },
    {
      "sourceid": "3",
      "other": "0000402622, which evaluates to: 1970-01-05 10:50:22",
      "method": "GET",
      "evidence": "0000402622",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "526"
    },
    {
      "sourceid": "3",
      "other": "0000402870, which evaluates to: 1970-01-05 10:54:30",
      "method": "GET",
      "evidence": "0000402870",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "527"
    },
    {
      "sourceid": "3",
      "other": "0000403367, which evaluates to: 1970-01-05 11:02:47",
      "method": "GET",
      "evidence": "0000403367",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "528"
    },
    {
      "sourceid": "3",
      "other": "0000406289, which evaluates to: 1970-01-05 11:51:29",
      "method": "GET",
      "evidence": "0000406289",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "529"
    },
    {
      "sourceid": "3",
      "other": "0000406311, which evaluates to: 1970-01-05 11:51:51",
      "method": "GET",
      "evidence": "0000406311",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "530"
    },
    {
      "sourceid": "3",
      "other": "0000406558, which evaluates to: 1970-01-05 11:55:58",
      "method": "GET",
      "evidence": "0000406558",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "531"
    },
    {
      "sourceid": "3",
      "other": "0000406583, which evaluates to: 1970-01-05 11:56:23",
      "method": "GET",
      "evidence": "0000406583",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "532"
    },
    {
      "sourceid": "3",
      "other": "0000406884, which evaluates to: 1970-01-05 12:01:24",
      "method": "GET",
      "evidence": "0000406884",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "533"
    },
    {
      "sourceid": "3",
      "other": "0000407078, which evaluates to: 1970-01-05 12:04:38",
      "method": "GET",
      "evidence": "0000407078",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "534"
    },
    {
      "sourceid": "3",
      "other": "0000409223, which evaluates to: 1970-01-05 12:40:23",
      "method": "GET",
      "evidence": "0000409223",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "535"
    },
    {
      "sourceid": "3",
      "other": "0000409245, which evaluates to: 1970-01-05 12:40:45",
      "method": "GET",
      "evidence": "0000409245",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "536"
    },
    {
      "sourceid": "3",
      "other": "0000409494, which evaluates to: 1970-01-05 12:44:54",
      "method": "GET",
      "evidence": "0000409494",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "537"
    },
    {
      "sourceid": "3",
      "other": "0000409694, which evaluates to: 1970-01-05 12:48:14",
      "method": "GET",
      "evidence": "0000409694",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "538"
    },
    {
      "sourceid": "3",
      "other": "0000415124, which evaluates to: 1970-01-05 14:18:44",
      "method": "GET",
      "evidence": "0000415124",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "539"
    },
    {
      "sourceid": "3",
      "other": "0000415146, which evaluates to: 1970-01-05 14:19:06",
      "method": "GET",
      "evidence": "0000415146",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "540"
    },
    {
      "sourceid": "3",
      "other": "0000415388, which evaluates to: 1970-01-05 14:23:08",
      "method": "GET",
      "evidence": "0000415388",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "541"
    },
    {
      "sourceid": "3",
      "other": "0000415998, which evaluates to: 1970-01-05 14:33:18",
      "method": "GET",
      "evidence": "0000415998",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "542"
    },
    {
      "sourceid": "3",
      "other": "0000416027, which evaluates to: 1970-01-05 14:33:47",
      "method": "GET",
      "evidence": "0000416027",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "543"
    },
    {
      "sourceid": "3",
      "other": "0000416080, which evaluates to: 1970-01-05 14:34:40",
      "method": "GET",
      "evidence": "0000416080",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "544"
    },
    {
      "sourceid": "3",
      "other": "0000416113, which evaluates to: 1970-01-05 14:35:13",
      "method": "GET",
      "evidence": "0000416113",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "545"
    },
    {
      "sourceid": "3",
      "other": "0000416138, which evaluates to: 1970-01-05 14:35:38",
      "method": "GET",
      "evidence": "0000416138",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "546"
    },
    {
      "sourceid": "3",
      "other": "0000416181, which evaluates to: 1970-01-05 14:36:21",
      "method": "GET",
      "evidence": "0000416181",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "547"
    },
    {
      "sourceid": "3",
      "other": "0000416201, which evaluates to: 1970-01-05 14:36:41",
      "method": "GET",
      "evidence": "0000416201",
      "pluginId": "10096",
      "cweid": "200",
      "confidence": "Low",
      "wascid": "13",
      "description": "A timestamp was disclosed by the application/web server - Unix",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage",
      "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
      "alert": "Timestamp Disclosure - Unix",
      "param": "",
      "attack": "",
      "name": "Timestamp Disclosure - Unix",
      "risk": "Informational",
      "id": "548"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "241",
      "url": "http://192.168.1.4:8070/docs/DVWA_v1.3.pdf",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "549"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "242",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=M;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "550"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "242",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=M;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "551"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "242",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=M;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "552"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "244",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=S;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "553"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "244",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=S;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "554"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "244",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=S;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "555"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "245",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=D;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "556"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "245",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=D;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "557"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "245",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=D;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "558"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "248",
      "url": "http://192.168.1.4:8070/dvwa/css/source.css",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "559"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "249",
      "url": "http://192.168.1.4:8070/dvwa/css/help.css",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "560"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "250",
      "url": "http://192.168.1.4:8070/icons/text.gif",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "561"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "251",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=N;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "562"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "251",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=N;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "563"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "251",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=N;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "564"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "253",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=M;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "565"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "253",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=M;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "566"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "253",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=M;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "567"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "255",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=S;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "568"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "255",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=S;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "569"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "255",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=S;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "570"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "257",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=D;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "571"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "257",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=D;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "572"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "257",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=D;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "573"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "260",
      "url": "http://192.168.1.4:8070/dvwa/images/dollar.png",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "574"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "261",
      "url": "http://192.168.1.4:8070/dvwa/images/warning.png",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "575"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "262",
      "url": "http://192.168.1.4:8070/icons/image2.gif",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "576"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "263",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=N;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "577"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "263",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=N;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "578"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "263",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=N;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "579"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "264",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=M;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "580"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "264",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=M;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "581"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "264",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=M;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "582"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "267",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=D;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "583"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "267",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=D;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "584"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "267",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=D;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "585"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "268",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=S;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "586"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "268",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=S;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "587"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "268",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=S;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "588"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "271",
      "url": "http://192.168.1.4:8070/dvwa/?C=N;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "589"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "271",
      "url": "http://192.168.1.4:8070/dvwa/?C=N;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "590"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "271",
      "url": "http://192.168.1.4:8070/dvwa/?C=N;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "591"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "272",
      "url": "http://192.168.1.4:8070/icons/unknown.gif",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "592"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "273",
      "url": "http://192.168.1.4:8070/dvwa/?C=M;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "593"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "273",
      "url": "http://192.168.1.4:8070/dvwa/?C=M;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "594"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "273",
      "url": "http://192.168.1.4:8070/dvwa/?C=M;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "595"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "274",
      "url": "http://192.168.1.4:8070/dvwa/?C=S;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "596"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "274",
      "url": "http://192.168.1.4:8070/dvwa/?C=S;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "597"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "274",
      "url": "http://192.168.1.4:8070/dvwa/?C=S;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "598"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "275",
      "url": "http://192.168.1.4:8070/dvwa/?C=D;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "599"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "275",
      "url": "http://192.168.1.4:8070/dvwa/?C=D;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "600"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "275",
      "url": "http://192.168.1.4:8070/dvwa/?C=D;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "601"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "276",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=N;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "602"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "276",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=N;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "603"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "276",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=N;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "604"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "278",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=M;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "605"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "278",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=M;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "606"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "278",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=M;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "607"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "280",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=S;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "608"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "280",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=S;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "609"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "280",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=S;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "610"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "282",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=D;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "611"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "282",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=D;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "612"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "282",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=D;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "613"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "284",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "614"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "284",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "615"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "284",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "616"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "286",
      "url": "http://192.168.1.4:8070/dvwa/includes/dvwaPage.inc.php",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "617"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "286",
      "url": "http://192.168.1.4:8070/dvwa/includes/dvwaPage.inc.php",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "618"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "292",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=N;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "619"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "292",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=N;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "620"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "292",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=N;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "621"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "294",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=S;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "622"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "294",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=S;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "623"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "294",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=S;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "624"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "295",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=M;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "625"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "295",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=M;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "626"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "295",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=M;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "627"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "297",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=D;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "628"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "297",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=D;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "629"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "297",
      "url": "http://192.168.1.4:8070/dvwa/css/?C=D;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "630"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "298",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=N;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "631"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "298",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=N;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "632"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "298",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=N;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "633"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "299",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=M;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "634"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "299",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=M;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "635"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "299",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=M;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "636"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "300",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=S;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "637"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "300",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=S;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "638"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "300",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=S;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "639"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "301",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=D;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "640"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "301",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=D;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "641"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "301",
      "url": "http://192.168.1.4:8070/dvwa/images/?C=D;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "642"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "302",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=M;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "643"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "302",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=M;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "644"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "302",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=M;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "645"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "303",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=N;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "646"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "303",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=N;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "647"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "303",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=N;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "648"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "304",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=D;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "649"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "304",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=D;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "650"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "304",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=D;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "651"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "305",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=S;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "652"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "305",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=S;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "653"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "305",
      "url": "http://192.168.1.4:8070/dvwa/js/?C=S;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "654"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "306",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=N;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "655"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "306",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=N;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "656"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "306",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=N;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "657"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "307",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=M;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "658"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "307",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=M;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "659"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "307",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=M;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "660"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "308",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=S;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "661"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "308",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=S;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "662"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "308",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=S;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "663"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "309",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=D;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "664"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "309",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=D;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "665"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "309",
      "url": "http://192.168.1.4:8070/dvwa/includes/?C=D;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "666"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "310",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=N;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "667"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "310",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=N;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "668"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "310",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=N;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "669"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "312",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=M;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "670"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "312",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=M;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "671"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "312",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=M;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "672"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "314",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=S;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "673"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "314",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=S;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "674"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "314",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=S;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "675"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "HTTP/1.0 500 Internal Server Error",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "316",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/MySQL.php",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Low",
      "id": "676"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "317",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=D;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "677"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "317",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=D;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "678"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "317",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=D;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "679"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "320",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=N;O=A",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "680"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "320",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=N;O=A",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "681"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "320",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=N;O=A",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "682"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "HTTP/1.0 500 Internal Server Error",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "321",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/PGSQL.php",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Low",
      "id": "683"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "322",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=M;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "684"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "322",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=M;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "685"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "322",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=M;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "686"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "323",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=S;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "687"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "323",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=S;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "688"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "323",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=S;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "689"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "Parent Directory",
      "pluginId": "90022",
      "cweid": "200",
      "confidence": "Medium",
      "wascid": "13",
      "description": "This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.",
      "messageId": "324",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=D;O=D",
      "reference": "",
      "solution": "Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.",
      "alert": "Application Error Disclosure",
      "param": "",
      "attack": "",
      "name": "Application Error Disclosure",
      "risk": "Medium",
      "id": "690"
    },
    {
      "sourceid": "3",
      "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
      "method": "GET",
      "evidence": "",
      "pluginId": "10021",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
      "messageId": "324",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=D;O=D",
      "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers",
      "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alert": "X-Content-Type-Options Header Missing",
      "param": "X-Content-Type-Options",
      "attack": "",
      "name": "X-Content-Type-Options Header Missing",
      "risk": "Low",
      "id": "691"
    },
    {
      "sourceid": "3",
      "other": "",
      "method": "GET",
      "evidence": "",
      "pluginId": "10020",
      "cweid": "16",
      "confidence": "Medium",
      "wascid": "15",
      "description": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.",
      "messageId": "324",
      "url": "http://192.168.1.4:8070/dvwa/includes/DBMS/?C=D;O=D",
      "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
      "solution": "Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).",
      "alert": "X-Frame-Options Header Not Set",
      "param": "X-Frame-Options",
      "attack": "",
      "name": "X-Frame-Options Header Not Set",
      "risk": "Medium",
      "id": "692"
    }
  ]
}
